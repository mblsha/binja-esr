start: (line | NEWLINE)*

line: (label? statement?)

?statement: section_decl
          | data_directive
          | instruction

label: CNAME ":"

section_decl: "SECTION"i CNAME
data_directive: defb_directive | defw_directive | defl_directive | defs_directive | defm_directive

// --- Unambiguous Instructions ---

instruction: "NOP"i -> nop
           | "RETI"i -> reti
           | "RET"i -> ret
           | "RETF"i -> retf
           | "SC"i -> sc
           | "RC"i -> rc
           | "TCL"i -> tcl
           | "HALT"i -> halt
           | "OFF"i -> off
           | "WAIT"i -> wait
           | "IR"i -> ir
           | "RESET"i -> reset
           | "SWAP"i _A -> swap_a
           | "ROR"i _A -> ror_a
           | "ROL"i _A -> rol_a
           | "SHR"i _A -> shr_a
           | "SHL"i _A -> shl_a
           | "ROR"i imem_operand -> ror_imem
           | "ROL"i imem_operand -> rol_imem
           | "SHR"i imem_operand -> shr_imem
           | "SHL"i imem_operand -> shl_imem
           | "MV"i _A "," _B -> mv_a_b
           | "MV"i _B "," _A -> mv_b_a
           | "MV"i reg "," reg -> mv_reg_reg
           | "MV"i reg "," expression -> mv_reg_imm
           | "MV"i reg "," imem_operand -> mv_reg_imem
           | "MV"i reg "," emem_operand -> mv_reg_emem
           | "MV"i reg "," emem_reg_operand -> mv_reg_ememreg
           | "MV"i emem_reg_operand "," reg -> mv_ememreg_reg
           | "MV"i reg "," emem_imem_operand -> mv_reg_ememimem
           | "MV"i emem_imem_operand "," reg -> mv_ememimem_reg
           | "MV"i imem_operand "," reg -> mv_imem_reg
           | "MV"i emem_operand "," reg -> mv_emem_reg
           | "MV"i imem_operand "," expression -> mv_imem_imm
           | "MV"i emem_operand "," expression -> mv_emem_imm
           | "MV"i imem_operand "," emem_reg_operand -> mv_imem_ememreg
           | "MV"i emem_reg_operand "," imem_operand -> mv_ememreg_imem
           | "MV"i imem_operand "," emem_imem_operand -> mv_imem_ememimem
           | "MV"i emem_imem_operand "," imem_operand -> mv_ememimem_imem
           | "MV"i imem_operand "," emem_operand -> mv_imem_emem
           | "MV"i emem_operand "," imem_operand -> mv_emem_imem
           | "MVW"i imem_operand "," expression -> mvw_imem_imm
           | "MVW"i imem_operand "," imem_operand -> mvw_imem_imem
           | "MVW"i imem_operand "," emem_operand -> mvw_imem_emem
           | "MVW"i emem_operand "," imem_operand -> mvw_emem_imem
           | "MVP"i imem_operand "," expression -> mvp_imem_imm
           | "MVP"i imem_operand "," imem_operand -> mvp_imem_imem
           | "MVP"i imem_operand "," emem_operand -> mvp_imem_emem
           | "MVP"i emem_operand "," imem_operand -> mvp_emem_imem
           | "MVL"i imem_operand "," imem_operand -> mvl_imem_imem
           | "MVL"i imem_operand "," emem_operand -> mvl_imem_emem
           | "MVL"i emem_operand "," imem_operand -> mvl_emem_imem
           | "MVL"i imem_operand "," emem_reg_operand -> mvl_imem_ememreg
           | "MVL"i emem_reg_operand "," imem_operand -> mvl_ememreg_imem
           | "MVL"i imem_operand "," emem_imem_operand -> mvl_imem_ememimem
           | "MVL"i emem_imem_operand "," imem_operand -> mvl_ememimem_imem
           | "MVLD"i imem_operand "," imem_operand -> mvld_imem_imem
           | "EX"i _A "," _B -> ex_a_b
           | "PUSHS"i _F -> pushs_f
           | "POPS"i _F -> pops_f
           | "PUSHU"i _F -> pushu_f
           | "POPU"i _F -> popu_f
           | "PUSHU"i _IMR -> pushu_imr
           | "POPU"i _IMR -> popu_imr
           | "PUSHU"i reg -> pushu_reg
           | "POPU"i reg -> popu_reg
           | "CALL"i expression -> call
           | "CALLF"i expression -> callf
           | "JP"i reg -> jp_reg
           | "JP"i imem_operand -> jp_imem
           | "JP"i expression -> jp_abs
           | "JPF"i expression -> jpf_abs
           | "JPZ"i expression -> jpz_abs
           | "JPNZ"i expression -> jpnz_abs
           | "JPC"i expression -> jpc_abs
           | "JPNC"i expression -> jpnc_abs
           | "JR"i "+" expression -> jr_plus
           | "JR"i "-" expression -> jr_minus
           | "JRZ"i "+" expression -> jrz_plus
           | "JRZ"i "-" expression -> jrz_minus
           | "JRNZ"i "+" expression -> jrnz_plus
           | "JRNZ"i "-" expression -> jrnz_minus
           | "JRC"i "+" expression -> jrc_plus
           | "JRC"i "-" expression -> jrc_minus
           | "JRNC"i "+" expression -> jrnc_plus
           | "JRNC"i "-" expression -> jrnc_minus
           | "INC"i reg -> inc_reg
           | "INC"i imem_operand -> inc_imem
           | "DEC"i reg -> dec_reg
           | "DEC"i imem_operand -> dec_imem
           | "MV"i imem_operand "," imem_operand -> mv_imem_imem
           | "EX"i imem_operand "," imem_operand -> ex_imem_imem
           | "EX"i reg "," reg -> ex_reg_reg
           | "EXW"i imem_operand "," imem_operand -> exw_imem_imem
           | "EXP"i imem_operand "," imem_operand -> exp_imem_imem
           | "EXL"i imem_operand "," imem_operand -> exl_imem_imem
           | "AND"i imem_operand "," _A -> and_imem_a
           | "AND"i _A "," imem_operand -> and_a_imem
           | "AND"i _A "," expression -> and_a_imm
           | "AND"i imem_operand "," expression -> and_imem_imm
           | "AND"i emem_addr "," expression -> and_emem_imm
           | "AND"i imem_operand "," imem_operand -> and_imem_imem
           | "ADD"i _A "," reg -> add_reg_reg
           | "ADD"i _A "," expression -> add_a_imm
           | "ADD"i imem_operand "," expression -> add_imem_imm
           | "ADD"i _A "," imem_operand -> add_a_imem
           | "ADD"i imem_operand "," _A -> add_imem_a
           | "ADD"i reg "," reg -> add_reg_reg
           | "ADC"i _A "," expression -> adc_a_imm
           | "ADC"i imem_operand "," expression -> adc_imem_imm
           | "ADC"i _A "," imem_operand -> adc_a_imem
           | "ADC"i imem_operand "," _A -> adc_imem_a
           | "SUB"i _A "," reg -> sub_reg_reg
           | "SUB"i _A "," expression -> sub_a_imm
           | "SUB"i imem_operand "," expression -> sub_imem_imm
           | "SUB"i _A "," imem_operand -> sub_a_imem
           | "SUB"i imem_operand "," _A -> sub_imem_a
           | "SUB"i reg "," reg -> sub_reg_reg
           | "SBC"i _A "," expression -> sbc_a_imm
           | "SBC"i imem_operand "," expression -> sbc_imem_imm
           | "SBC"i _A "," imem_operand -> sbc_a_imem
           | "SBC"i imem_operand "," _A -> sbc_imem_a
           | "ADCL"i imem_operand "," imem_operand -> adcl_imem_imem
           | "ADCL"i imem_operand "," _A -> adcl_imem_a
           | "SBCL"i imem_operand "," imem_operand -> sbcl_imem_imem
           | "SBCL"i imem_operand "," _A -> sbcl_imem_a
           | "DADL"i imem_operand "," imem_operand -> dadl_imem_imem
           | "DADL"i imem_operand "," _A -> dadl_imem_a
           | "DSBL"i imem_operand "," imem_operand -> dsbl_imem_imem
           | "DSBL"i imem_operand "," _A -> dsbl_imem_a
           | "DSLL"i imem_operand -> dsll_imem
           | "DSRL"i imem_operand -> dsrl_imem
           | "PMDF"i imem_operand "," expression -> pmdf_imem_imm
           | "PMDF"i imem_operand "," _A -> pmdf_imem_a
           | "OR"i imem_operand "," _A -> or_imem_a
           | "OR"i _A "," imem_operand -> or_a_imem
           | "OR"i _A "," expression -> or_a_imm
           | "OR"i imem_operand "," expression -> or_imem_imm
           | "OR"i emem_addr "," expression -> or_emem_imm
           | "OR"i imem_operand "," imem_operand -> or_imem_imem
           | "XOR"i imem_operand "," _A -> xor_imem_a
           | "XOR"i _A "," imem_operand -> xor_a_imem
           | "XOR"i _A "," expression -> xor_a_imm
           | "XOR"i imem_operand "," expression -> xor_imem_imm
           | "XOR"i emem_addr "," expression -> xor_emem_imm
           | "XOR"i imem_operand "," imem_operand -> xor_imem_imem
           | "CMP"i _A "," expression -> cmp_a_imm
           | "CMP"i imem_operand "," expression -> cmp_imem_imm
           | "CMP"i emem_addr "," expression -> cmp_emem_imm
           | "CMP"i imem_operand "," _A -> cmp_imem_a
           | "CMP"i imem_operand "," imem_operand -> cmp_imem_imem
           | "CMPW"i imem_operand "," imem_operand -> cmpw_imem_imem
           | "CMPP"i imem_operand "," imem_operand -> cmpp_imem_imem
           | "CMPW"i imem_operand "," reg -> cmpw_imem_reg
           | "CMPP"i imem_operand "," reg -> cmpp_imem_reg
           | "TEST"i _A "," expression -> test_a_imm
           | "TEST"i imem_operand "," expression -> test_imem_imm
           | "TEST"i emem_addr "," expression -> test_emem_imm
           | "TEST"i imem_operand "," _A -> test_imem_a



// --- Data Directives ---
defb_directive: "defb"i def_arg ("," def_arg)*
defw_directive: "defw"i def_arg ("," def_arg)*
defl_directive: "defl"i def_arg ("," def_arg)*
defs_directive: "defs"i NUMBER
defm_directive: "defm"i string_literal

?def_arg: expression | string_literal
?expression: atom
string_literal: ESCAPED_STRING


// --- Operands ---
reg: CNAME
atom: NUMBER | CNAME

imem_operand: imem_n
            | imem_bp_n
            | imem_px_n
            | imem_py_n
            | imem_bp_px
            | imem_bp_py

imem_n:     "(" expression ")"
imem_bp_n:  "(" _BP "+" expression ")"
imem_px_n:  "(" _PX "+" expression ")"
imem_py_n:  "(" _PY "+" expression ")"
imem_bp_px: "(" _BP "+" _PX ")"
imem_bp_py: "(" _BP "+" _PY ")"

emem_addr: "[" expression "]"

emem_reg_operand: emem_reg_simple
                | emem_reg_post_inc
                | emem_reg_pre_dec
                | emem_reg_plus
                | emem_reg_minus

emem_reg_simple: "[" reg "]"
emem_reg_post_inc: "[" reg "++" "]"
emem_reg_pre_dec: "[" "--" reg "]"
emem_reg_plus: "[" reg "+" expression "]"
emem_reg_minus: "[" reg "-" expression "]"

emem_imem_operand: emem_imem_simple
                  | emem_imem_plus
                  | emem_imem_minus

emem_imem_simple: "[" imem_operand "]"
emem_imem_plus: "[" imem_operand "+" expression "]"
emem_imem_minus: "[" imem_operand "-" expression "]"

emem_operand: emem_addr
            | emem_reg_operand
            | emem_imem_operand


// --- Terminals with higher priority ---
_A.2: "A"i
_B.2: "B"i
_F.2: "F"i
_IMR.2: "IMR"i
_BP.2: "BP"i
_PX.2: "PX"i
_PY.2: "PY"i


// --- Common Terminals ---
NUMBER: /0x[0-9a-fA-F]+/i | /[0-9]+/

%import common.ESCAPED_STRING
%import common.NEWLINE
%import common.WS

CNAME: /[a-zA-Z_][a-zA-Z0-9_]*/

%ignore WS
// Ignore comments starting with ;
%ignore /;[^\n]*/
